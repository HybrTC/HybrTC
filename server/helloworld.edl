enclave {
    from "openenclave/edl/syscall.edl" import *;
    from "platform.edl" import *;

    include "stdint.h"

    trusted {

        public void verifier_generate_challenge(    [out] uint8_t** obuf,
                                                    [out] size_t* olen);

        public uint32_t attester_generate_response( [in, size=ilen] const uint8_t* ibuf,
                                                    size_t ilen,
                                                    [out] uint8_t** obuf,
                                                    [out] size_t* olen);

        public uint32_t verifier_process_response(  [in, size=ilen] const uint8_t* ibuf,
                                                    size_t ilen);


        public void set_client_query(       uint32_t sid,
                                            [in, size=ilen] const uint8_t* ibuf,
                                            size_t ilen,
                                            bool half,
                                            [user_check] const uint32_t* data_key,
                                            [user_check] const uint32_t* data_val,
                                            size_t data_size);

        public void build_bloom_filter(     uint32_t sid,
                                            [out] uint8_t** obuf,
                                            [out] size_t* olen);

        public void match_bloom_filter(     uint32_t sid,
                                            [user_check] const uint8_t* ibuf,
                                            size_t ilen,
                                            [out] uint8_t** obuf,
                                            [out] size_t* olen);

        public void aggregate(              uint32_t sid,
                                            [user_check] const uint8_t* ibuf,
                                            size_t ilen);

        public void get_result(             uint32_t sid,
                                            [out] uint8_t** obuf,
                                            [out] size_t* olen);
    };

    untrusted {
    };
};
